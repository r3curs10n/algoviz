{"version":3,"sources":["traces/sample.tsx","ui/stack/ProgramObjectUI.tsx","ui/stack/ProgramStackUI.tsx","vm/VirtualMachine.tsx","ui/stack/ProgramHeapGraphUI.tsx","ui/stack/ProgramHeapUI.tsx","samples/Programs.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["trace","ProgramObjectUI","props","isNullOrUndefined","object","ptrValue","className","modifiedAtStep","executionStepIndex","name","toString","href","onClick","highlightedPtr","ProgramStackFrameUI","locals","frame","args","forEach","val","key","_","push","onVmObjectClick","vmEngine","maybeReturn","returnVal","methodName","ProgramStackUI","ListGroup","stack","frames","map","ListGroupItem","VmObject","boolValue","numberValue","stringValue","this","e","x","isPtr","fromPtr","undefined","fromString","fromNumber","fromBool","VmStackFrame","Map","has","get","VmStack","getTopFrame","pop","length","VmHeapObject","ptr","type","listObject","mapObject","VmHeap","storage","namedReferences","Set","arg","add","local","VmEngine","heap","programTrace","programInfer","executionLineNumber","log","infer","nextStepInternal","op","isAboutToEnterFunction","depth","movedForward","info","Object","entries","wrappedArgs","set","fromVal","function","pushFrame","line","obj","popFrame","id","Array","isArray","z","members","pos","curList","curMap","delete","executeStep","updateNamedReferences","stepToGo","reset","i","nextStep","filter","data","inferences","localVarValue","localVarName","genericInference","inference","funcName","var","getVariable","array","indexVarName","indexVarValue","indexDimension","index","visjs","require","ProgramHeapGraphUI","visjsDomRef","graph","options","React","createRef","layout","hierarchical","direction","sortMethod","Network","current","console","nodes","update","color","background","ref","annotations","dataMemebrs","find","member","join","edges","consumed","getMemberPointerAnnotationsFor","label","getLabelFor","annotation","from","to","arrows","DataSet","ui","Component","OneDArray","_vmEngine","every","getArrayIndexAnnotationsFor","arr","Table","bordered","size","idx","indices","TwoDArray","child","is","cols","Math","max","list","rowUi","Dict","rows","ProgramHeapUI","elements","addUI","r","getUI","v","Card","Body","graphUI","createUI","ProgramList","route","code","App","state","monaco","decorations","DummyTrace","lineNumber","isEditing","isWaiting","setState","incrementExecutionStep","prevStep","nextAndSkipFunction","newDecorations","revealLineInCenter","range","Monaco","isWholeLine","deltaDecorations","maybeError","error","Alert","style","marginTop","variant","msg","editor","height","language","value","theme","editorDidMount","readOnly","Form","Row","Col","xs","ButtonGroup","Button","disabled","Spinner","animation","getValue","superagent","post","send","then","res","status","alert","body","AppContainer","forceRefresh","Navbar","bg","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","p","Item","Link","Container","fluid","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bbc72fc2.chunk.js","sourcesContent":["export const trace = {\n  \"infer\": [],\n  \"log\": []\n}\n","import { isNullOrUndefined } from \"util\"\nimport { VmObject } from \"../../vm/VirtualMachine\"\nimport React from 'react'\nimport { BsTag } from \"react-icons/bs\"\n\ninterface ProgramObjectUIProps {\n  name?: string\n  object: VmObject\n  executionStepIndex: number\n  highlightedPtr?: number\n  onClick?: (ptr: number) => void\n}\n\nexport const ProgramObjectUI = (props: ProgramObjectUIProps) => {\n  if (isNullOrUndefined(props.object.ptrValue)) {\n    return <div className={props.object.modifiedAtStep === props.executionStepIndex ? \"highlightedLine\" : \"\"}>\n      {(isNullOrUndefined(props.name) ? '' : (props.name + ': ')) + props.object.toString()}\n    </div>\n  } else {\n    return <div className={props.object.modifiedAtStep === props.executionStepIndex ? \"highlightedLine\" : \"\"}>\n      {isNullOrUndefined(props.name) ? '' : (props.name + ': ')}\n      <a href=\"#\" onClick={() => {\n        if (props.onClick !== null) {\n          props.onClick(props.object.ptrValue)\n        }\n      }}>\n        {(() => {\n          if (props.object.ptrValue === 0) {\n            return 'None'\n          }\n          if (props.object.ptrValue === -1) {\n            return 'Tuple'\n          }\n          if (props.highlightedPtr === props.object.ptrValue) {\n            return <>{'Show'} <BsTag/></>\n          }\n          return 'Show'\n        })()}\n      </a>\n    </div>\n  }\n}\n","import { VmEngine, VmStackFrame, VmObject } from '../../vm/VirtualMachine'\nimport { ListGroup, ListGroupItem } from 'react-bootstrap'\nimport React from 'react'\nimport { ProgramObjectUI } from './ProgramObjectUI'\nimport { isNullOrUndefined } from 'util'\n\nexport interface ProgramStackUIProps {\n  vmEngine: VmEngine,\n  highlightedPtr: number,\n  onVmObjectClick?: (ptr: number) => void\n}\n\ninterface ProgramStackFrameUIProps {\n  vmEngine: VmEngine,\n  frame: VmStackFrame,\n  highlightedPtr: number,\n  onVmObjectClick?: (ptr: number) => void\n}\n\nconst ProgramStackFrameUI = (props: ProgramStackFrameUIProps) => {\n  const locals = []\n  props.frame.args.forEach((val, key, _) => {\n    locals.push(<ProgramObjectUI highlightedPtr={props.highlightedPtr} name={key} object={val} onClick={props.onVmObjectClick} executionStepIndex={props.vmEngine.executionStepIndex} />)\n  })\n  props.frame.locals.forEach((val, key, _) => {\n    locals.push(<ProgramObjectUI highlightedPtr={props.highlightedPtr} name={key} object={val} onClick={props.onVmObjectClick} executionStepIndex={props.vmEngine.executionStepIndex} />)\n  })\n\n  let maybeReturn = null\n  if (!isNullOrUndefined(props.frame.returnVal)) {\n    maybeReturn = <div>\n      <ProgramObjectUI highlightedPtr={props.highlightedPtr} name=\"Return\" object={props.frame.returnVal} onClick={props.onVmObjectClick} executionStepIndex={props.vmEngine.executionStepIndex} />)\n    </div>\n  }\n\n  return <div>\n    <div>\n    {props.frame.methodName + '()'}\n    </div>\n    <div>\n      {locals}\n    </div>\n    { maybeReturn}\n  </div>\n}\n\nexport const ProgramStackUI = (props: ProgramStackUIProps) => {\n  return <ListGroup>\n    {props.vmEngine.stack.frames.map(frame => {\n      return <ListGroupItem>\n        <ProgramStackFrameUI highlightedPtr={props.highlightedPtr} frame={frame} onVmObjectClick={props.onVmObjectClick} vmEngine={props.vmEngine} />\n      </ListGroupItem>\n    })}\n  </ListGroup>\n}\n","import { isNullOrUndefined } from \"util\"\n\nexport class VmObject {\n  boolValue?: boolean\n  numberValue?: number\n  ptrValue?: number\n  stringValue?: string\n\n  modifiedAtStep?: number\n\n  toString() {\n    if (!isNullOrUndefined(this.boolValue)) {\n      return '' + this.boolValue\n    } else if (!isNullOrUndefined(this.numberValue)) {\n      return '' + this.numberValue\n    } else if (!isNullOrUndefined(this.ptrValue)) {\n      return '#' + this.ptrValue\n    } else if (!isNullOrUndefined(this.stringValue)) {\n      return '\"' + this.stringValue + '\"'\n    }\n    return 'null'\n  }\n\n  static fromBool(val: boolean) {\n    let e = new VmObject()\n    e.boolValue = val\n    return e\n  }\n\n  static fromNumber(val: number) {\n    let e = new VmObject()\n    e.numberValue = val\n    return e\n  }\n\n  static fromPtr(val: number) {\n    let e = new VmObject()\n    e.ptrValue = val\n    return e\n  }\n\n  static fromString(val: string) {\n    let e = new VmObject()\n    e.stringValue = val\n    return e\n  }\n\n  static fromVal(x: Array<any>) {\n    const isPtr = x[0]\n    const val = x[1]\n\n    if (isPtr) {\n      return VmObject.fromPtr(val)\n    }\n\n    if (val == null || val == undefined) {\n      return new VmObject()\n    } else if (typeof val == \"string\") {\n      return VmObject.fromString(val)\n    } else if (typeof val == \"number\") {\n      return VmObject.fromNumber(val)\n    } else if (typeof val == \"boolean\") {\n      return VmObject.fromBool(val)\n    }\n\n    return new VmObject()\n  }\n}\n\nexport class VmStackFrame {\n  methodName: string\n  args: Map<string, VmObject> = new Map()\n  locals: Map<string, VmObject> = new Map()\n  returnVal?: VmObject\n\n  constructor(methodName: string, args: Map<string, VmObject>) {\n    this.methodName = methodName\n    this.args = args\n  }\n\n  getVariable(name: string): VmObject {\n    if (this.locals.has(name)) {\n      return this.locals.get(name)\n    }\n    if (this.args.has(name)) {\n      return this.args.get(name)\n    }\n    return null\n  }\n}\n\nexport class VmStack {\n  frames: Array<VmStackFrame> = []\n\n  pushFrame(frame: VmStackFrame) {\n    this.frames.push(frame)\n  }\n\n  markFrameReturn(val: VmObject) {\n    this.getTopFrame().returnVal = val\n  }\n\n  popFrame() {\n    this.frames.pop()\n  }\n\n  getTopFrame() {\n    return this.frames[this.frames.length  - 1]\n  }\n}\n\ninterface ExecutionStep {\n  op: string,\n  info: any,\n}\n\ninterface ArrayIndexInference {\n  funcName: string,\n  array: string,\n  var: string,\n  index: number\n}\n\nexport interface MemberPointerInference {\n  className: string,\n  member: string\n}\n\ninterface Inference {\n  type: string,\n  data: any\n}\n\ninterface ArrayIndexAnnotation {\n  indexVarName: string,\n  indexVarValue: number,\n  indexDimension: number\n}\n\nexport class VmHeapObject {\n  type: string\n  ptr: number\n  listObject?: Array<VmObject>\n  mapObject?: Map<string, VmObject>\n\n  constructor(ptr: number, type){\n    this.type = type\n    this.ptr = ptr\n  }\n}\n\nexport class VmHeap {\n  storage: Map<number, VmHeapObject>\n  namedReferences: Set<number>\n\n  constructor() {\n    this.storage = new Map()\n    this.namedReferences = new Set()\n  }\n\n  updateNamedReferences(stack: VmStack) {\n    this.namedReferences = new Set()\n    stack.frames.forEach((frame) => {\n      frame.args.forEach((arg) => {\n        if (arg.ptrValue !== null) {\n          this.namedReferences.add(arg.ptrValue)\n        }\n      })\n      frame.locals.forEach((local) => {\n        if (local.ptrValue !== null) {\n          this.namedReferences.add(local.ptrValue)\n        }\n      })\n    })\n  }\n}\n\nexport class VmEngine {\n  stack: VmStack\n  heap: VmHeap\n  programTrace: Array<ExecutionStep>\n  programInfer: Array<Inference>\n  executionStepIndex: number = -1\n  executionLineNumber: number = -1\n\n  constructor(trace) {\n    this.programTrace = trace.log\n    this.programInfer = trace.infer\n    this.stack = new VmStack()\n    this.heap = new VmHeap()\n  }\n\n  nextStep() {\n    this.nextStepInternal()\n  }\n\n  isAboutToEnterFunction() {\n    if (this.executionStepIndex <= 0) {\n      return false\n    }\n    return this.executionStepIndex + 1 < this.programTrace.length && this.programTrace[this.executionStepIndex + 1].op === \"pushFrame\"\n  }\n\n  nextAndSkipFunction() {\n    if (this.isAboutToEnterFunction()) {\n      let depth = 0\n      let movedForward = false\n      while (true) {\n        if (this.executionStepIndex >= this.programTrace.length) {\n          break\n        }\n        if (this.programTrace[this.executionStepIndex].op === \"pushFrame\") {\n          depth++\n        } else if (this.programTrace[this.executionStepIndex].op === \"popFrame\") {\n          depth--\n          movedForward = true\n        }\n        this.nextStepInternal()\n        if (depth === 0 && movedForward) {\n          break\n        }\n      }\n    }\n  }\n\n  executeStep(e: any) {\n    if (e.op == \"line\") {\n      this.executionLineNumber = e.info\n    } else if (e.op == \"pushFrame\") {\n      const args: Map<string, any> = new Map(Object.entries(e.info.locals))\n      const wrappedArgs: Map<string, VmObject> = new Map()\n      args.forEach((val: any, key: string, _) => {\n        wrappedArgs.set(key, VmObject.fromVal(val))\n      })\n      const frame = new VmStackFrame(e.info.function, wrappedArgs)\n      this.stack.pushFrame(frame)\n      this.executionLineNumber = e.info.line\n    } else if (e.op == \"newLocal\" || e.op == \"updateLocal\") {\n      const obj = VmObject.fromVal(e.info[1])\n      obj.modifiedAtStep = this.executionStepIndex\n      this.stack.getTopFrame().locals.set(e.info[0], obj)\n    } else if (e.op == \"return\") {\n      this.executionLineNumber = -1\n      this.stack.getTopFrame().returnVal = VmObject.fromVal(e.info)\n      this.stack.getTopFrame().returnVal.modifiedAtStep = this.executionStepIndex\n    } else if (e.op == \"popFrame\") {\n      this.executionLineNumber = -1\n      this.stack.popFrame()\n    } else if (e.op == \"new\") {\n      const id: number = e.info[0]\n      let obj = new VmHeapObject(id, \"\")\n      if (Array.isArray(e.info[1])) {\n        const val: Array<any> = e.info[1]\n        obj.listObject = val.map((z => VmObject.fromVal(z)))\n        obj.type = \"list\"\n      } else {\n        obj.type = e.info[1].type\n        obj.mapObject = new Map()\n        Object.entries(e.info[1].members).forEach(([key, val]) => {\n          obj.mapObject.set(key, VmObject.fromVal(val as Array<any>))\n        })\n      }\n      this.heap.storage.set(id, obj)\n    } else if (e.op == \"modifyPos\") {\n      const id: number = e.info[0]\n      const pos: number = e.info[1]\n      const val: any = e.info[2]\n      const curList = this.heap.storage.get(id)\n      const obj = VmObject.fromVal(val)\n      obj.modifiedAtStep = this.executionStepIndex\n      if (pos >= curList.listObject.length) {\n        curList.listObject.push(obj)\n      } else {\n        curList.listObject[pos] = obj\n      }\n    } else if (e.op == \"modifyKey\" || e.op == \"addKey\") {\n      const id: number = e.info[0]\n      const key = e.info[1]\n      const val = e.info[2]\n      const curMap = this.heap.storage.get(id)\n      const obj = VmObject.fromVal(val)\n      obj.modifiedAtStep = this.executionStepIndex\n      curMap.mapObject.set(key, obj)\n    } else if (e.op == \"delete\") {\n      this.heap.storage.delete(e.info)\n    } else if (e.op == \"batch\") {\n      e.info.forEach(z => this.executeStep(z))\n    }\n  }\n\n  nextStepInternal() {\n    this.executionStepIndex++\n    if (this.executionStepIndex >= this.programTrace.length) {\n      return false\n    }\n\n    const e = this.programTrace[this.executionStepIndex]\n    this.executeStep(e)\n\n    this.heap.updateNamedReferences(this.stack)\n    return true\n  }\n\n  prevStep() {\n    const stepToGo = this.executionStepIndex - 1\n    this.reset()\n    for (let i = 0; i < stepToGo; i++) {\n      this.nextStep()\n    }\n  }\n\n  reset() {\n    this.executionLineNumber = -1\n    this.executionStepIndex = -1\n    this.stack = new VmStack()\n  }\n\n  getMemberPointerAnnotationsFor(ptr: number) {\n    const obj = this.heap.storage.get(ptr)\n    return this.programInfer.filter(\n      e => e.type === \"memberPointer\" && e.data.className === obj.type\n    ).map(\n      e => e.data as MemberPointerInference\n    )\n  }\n\n  getArrayIndexAnnotationsFor(ptr: number) {\n    const frame = this.stack.getTopFrame()\n    const inferences: Array<ArrayIndexAnnotation> = []\n    frame.locals.forEach((localVarValue, localVarName) => {\n      this.programInfer.forEach(genericInference => {\n        if (genericInference.type !== \"arrayIndex\") {\n          return\n        }\n        const inference: ArrayIndexInference = genericInference.data\n        if (inference.funcName !== frame.methodName) {\n          return\n        }\n        if (inference.var !== localVarName) {\n          return\n        }\n        if (frame.getVariable(inference.array).ptrValue !== ptr) {\n          return\n        }\n        inferences.push({\n          indexVarName: localVarName,\n          indexVarValue: localVarValue.numberValue,\n          indexDimension: inference.index\n        })\n      })\n    })\n    return inferences\n  }\n}\n","import { VmHeap, VmObject, VmHeapObject, VmEngine, MemberPointerInference } from '../../vm/VirtualMachine'\nimport { ListGroup, ListGroupItem, Table, Card } from 'react-bootstrap'\nimport React from 'react'\nimport 'visjs-network/dist/vis.css'\nimport './heap-graph.css'\nimport { isNullOrUndefined } from 'util'\nconst visjs = require('visjs-network/dist/vis')\n\ninterface ProgramHeapGraphUIProps {\n  vmEngine: VmEngine\n  data: any\n  highlightedPtr: number\n}\n\nexport class ProgramHeapGraphUI extends React.Component<ProgramHeapGraphUIProps> {\n  visjsDomRef: React.RefObject<any>\n  graph: any\n  options: any\n\n  constructor(props: ProgramHeapGraphUIProps) {\n    super(props)\n    this.visjsDomRef = React.createRef()\n    this.options = {\n      layout: {\n        hierarchical: {\n          direction: \"UD\",\n          sortMethod: \"directed\"\n        },\n      },\n    }\n  }\n\n  static getLabelFor(obj: VmHeapObject, annotations: Array<MemberPointerInference>) {\n    let dataMemebrs = []\n    obj.mapObject.forEach((val, key) => {\n      if (!annotations.find(e => e.member === key)) {\n        dataMemebrs.push(`${key}: ${val.toString()}`)\n      }\n    })\n    return dataMemebrs.length > 0 ? dataMemebrs.join(\"\\n\") : \"...\"\n  }\n\n  static createUI(vmEngine: VmEngine, highlightedPtr: number) {\n    const heap = vmEngine.heap\n    const nodes = []\n    const edges = []\n    const consumed = new Set()\n    heap.storage.forEach((obj, ptr) => {\n      const annotations = vmEngine.getMemberPointerAnnotationsFor(ptr)\n      console.log('annotations')\n      console.log(annotations)\n      if (annotations.length > 0) {\n        consumed.add(ptr)\n        nodes.push({id: ptr, label: ProgramHeapGraphUI.getLabelFor(obj, annotations)})\n        annotations.forEach(annotation => {\n          if (obj.mapObject.has(annotation.member) && obj.mapObject.get(annotation.member).ptrValue !== 0)\n          edges.push({from: ptr, to: obj.mapObject.get(annotation.member).ptrValue, arrows: \"to\"})\n        })\n      }\n    })\n    const data = {\n      nodes: new visjs.DataSet(nodes),\n      edges: new visjs.DataSet(edges),\n    }\n    console.log('fdata')\n    console.log(data)\n    return {\n      consumed: consumed,\n      ui: <ProgramHeapGraphUI data={data} vmEngine={vmEngine} highlightedPtr={highlightedPtr} />\n    }\n  }\n\n  componentDidMount() {\n    this.graph = new visjs.Network(this.visjsDomRef.current, this.props.data, this.options);\n  }\n\n  render() {\n    if (!isNullOrUndefined(this.visjsDomRef.current)) {\n      console.log('render')\n      console.log(this.props.data)\n      this.graph = new visjs.Network(this.visjsDomRef.current, this.props.data, this.options);\n      if (!isNullOrUndefined(this.props.data.nodes.get(this.props.highlightedPtr))) {\n        this.props.data.nodes.update([{id: this.props.highlightedPtr, color: {background: \"#AAFFAA\"}}])\n      }\n    }\n    return <div className=\"heap-graph\" ref={this.visjsDomRef}></div>\n  }\n}\n","import { VmHeap, VmObject, VmHeapObject, VmEngine } from '../../vm/VirtualMachine'\nimport { ListGroup, ListGroupItem, Table, Card } from 'react-bootstrap'\nimport React from 'react'\nimport { isNullOrUndefined } from 'util'\nimport { ProgramObjectUI } from './ProgramObjectUI'\nimport { ProgramHeapGraphUI } from './ProgramHeapGraphUI'\nimport '../../App.css'\n\nclass OneDArray {\n  static is(obj: VmHeapObject, _vmEngine: VmEngine) {\n    if (isNullOrUndefined(obj.listObject)) {\n      return false\n    }\n    return obj.listObject.every(e => isNullOrUndefined(e.ptrValue))\n  }\n\n  static getUI(obj: VmHeapObject, vmEngine: VmEngine) {\n    const annotations = vmEngine.getArrayIndexAnnotationsFor(obj.ptr)\n    const arr = obj.listObject\n    const ui = <Table bordered size=\"sm\">\n      <thead>\n        <tr>\n          {arr.map((_, idx) => {\n            const indices = annotations.filter(e => e.indexVarValue === idx && e.indexDimension === 0).map(e => e.indexVarName)\n            const annotation = indices.length > 0 ? '(' + indices.join(\", \") + ')' : \"\"\n            return <th className=\"w-25\">{`${idx} ${annotation}`}</th>\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {arr.map((e) => {\n            return <td>\n              {\n                <ProgramObjectUI object={e} executionStepIndex={vmEngine.executionStepIndex} />\n              }\n            </td>\n          })}\n        </tr>\n      </tbody>\n    </Table>\n\n    return {\n      consumed: new Set(),\n      ui: ui\n    }\n  }\n}\n\nclass TwoDArray {\n  static is(obj: VmHeapObject, vmEngine: VmEngine) {\n    if (isNullOrUndefined(obj.listObject)) {\n      return false\n    }\n    return obj.listObject.every(child => {\n      if (isNullOrUndefined(child.ptrValue) || !vmEngine.heap.storage.has(child.ptrValue)) {\n        return false\n      }\n      return OneDArray.is(vmEngine.heap.storage.get(child.ptrValue), vmEngine)\n    })\n  }\n\n  static getUI(obj: VmHeapObject, vmEngine: VmEngine) {\n    const arr = obj.listObject\n    const cols = Math.max(...arr.map(e => vmEngine.heap.storage.get(e.ptrValue).listObject.length))\n\n    const annotations = vmEngine.getArrayIndexAnnotationsFor(obj.ptr)\n\n    const rowUi = (idx: number, list: VmHeapObject) => {\n      return <tr>\n        <th>\n          {\n            (() => {\n              const indices = annotations.filter(e => e.indexVarValue === idx && e.indexDimension === 0).map(e => e.indexVarName)\n              const annotation = indices.length > 0 ? '(' + indices.join(\", \") + ')' : \"\"\n              return `${idx} ${annotation}`\n            }\n            )()}\n        </th>\n        {list.listObject.map(e => {\n          return <td>\n            <ProgramObjectUI object={e} executionStepIndex={vmEngine.executionStepIndex} />\n          </td>\n        })}\n      </tr>\n    }\n\n    const ui = <Table bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th className=\"w-25\">#</th>\n          {Array.from({ length: cols }).map((_, idx) => {\n            const indices = annotations.filter(e => e.indexVarValue === idx && e.indexDimension === 1).map(e => e.indexVarName)\n            const annotation = indices.length > 0 ? '(' + indices.join(\", \") + ')' : \"\"\n            return <th className=\"w-25\">{`${idx} ${annotation}`}</th>\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {\n          arr.map((e, idx) => rowUi(idx, vmEngine.heap.storage.get(e.ptrValue)))\n        }\n      </tbody>\n    </Table>\n\n    const consumed = new Set()\n    arr.forEach(e => consumed.add(e.ptrValue))\n\n    return {\n      consumed: consumed,\n      ui: ui\n    }\n  }\n}\n\nclass Dict {\n  static is(obj: VmHeapObject, _vmEngine: VmEngine) {\n    if (isNullOrUndefined(obj.mapObject) || obj.type !== \"dict\") {\n      return false\n    }\n    return true\n  }\n\n  static getUI(obj: VmHeapObject, vmEngine: VmEngine, onVmObjectClick) {\n    const members = obj.mapObject\n    const ui = <Table bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Key</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {(() => {\n          let rows = []\n          members.forEach((val, key) => {\n            rows.push(<tr>\n              <td>{key}</td>\n              <td><ProgramObjectUI object={val} executionStepIndex={vmEngine.executionStepIndex} onClick={onVmObjectClick} /></td>\n            </tr>)\n          })\n          return rows\n        })()}\n      </tbody>\n    </Table>\n\n    return {\n      consumed: new Set(),\n      ui: ui\n    }\n  }\n}\n\ninterface ProgramHeapUIProps {\n  vmEngine: VmEngine,\n  highlightedPtr: number,\n  onVmObjectClick: (ptr: number) => void\n}\n\nconst createUIFor = (obj: VmHeapObject, vmEngine: VmEngine, onVmObjectClick) => {\n  if (OneDArray.is(obj, vmEngine)) {\n    return OneDArray.getUI(obj, vmEngine)\n  }\n  if (TwoDArray.is(obj, vmEngine)) {\n    return TwoDArray.getUI(obj, vmEngine)\n  }\n  if (Dict.is(obj, vmEngine)) {\n    return Dict.getUI(obj, vmEngine, onVmObjectClick)\n  }\n  return {\n    consumed: new Set(),\n    ui: <div>Not Supported</div>\n  }\n}\n\nexport const ProgramHeapUI = (props: ProgramHeapUIProps) => {\n  const heap = props.vmEngine.heap\n\n  const consumed = new Set()\n  const elements = []\n\n  const addUI = (ptr: number, e: VmHeapObject) => {\n    const r = createUIFor(e, props.vmEngine, props.onVmObjectClick)\n    r.consumed.forEach(v => consumed.add(v))\n    elements.push(\n      <Card>\n        <Card.Body className={props.highlightedPtr === ptr ? \"highlightedBackground\" : null}>\n          {r.ui}\n        </Card.Body>\n      </Card>\n    )\n  }\n\n  const graphUI = ProgramHeapGraphUI.createUI(props.vmEngine, props.highlightedPtr)\n  graphUI.consumed.forEach(v => consumed.add(v))\n  if (graphUI.consumed.size > 0) {\n    elements.push(\n      <Card>\n        <Card.Body>\n          {graphUI.ui}\n        </Card.Body>\n      </Card>\n    )\n  }\n\n  heap.namedReferences.forEach(ptr => {\n    if (!heap.storage.has(ptr) || consumed.has(ptr)) {\n      return;\n    }\n    consumed.add(ptr)\n    addUI(ptr, heap.storage.get(ptr))\n  })\n\n  // Add UI for unnamed refs if they haven't been consumed\n  heap.storage.forEach((obj, ptr) => {\n    if (!consumed.has(ptr)) {\n      addUI(ptr, obj)\n    }\n  })\n\n  return <div>\n    {elements}\n  </div>\n}\n","export interface ProgramEntry {\n  code: string,\n  name: string,\n  route: string,\n}\n\nexport const ProgramList: Array<ProgramEntry> = [\n  {\n    route: \"/programs/reverse-linked-list\",\n    name: \"Reverse Linked List\",\n    code: `\nclass ListNode:\n    \"\"\"\n    pointers: next\n    \"\"\"\n    def __init__(self):\n        self.data = 0\n        self.next = None\n\ndef constructList():\n    head = ListNode()\n    head.data = 1\n\n    cur = head\n    for i in range (2, 5):\n        cur.next = ListNode()\n        cur.next.data = i\n        cur = cur.next\n    return head\n\ndef reverseList(head):\n    if head.next is None:\n        return (head, head)\n    newHead, newTail = reverseList(head.next)\n    head.next = None\n    newTail.next = head\n    return newHead, head\n\ndef main():\n    myList = constructList()\n    newHead, newTail = reverseList(myList)\n    return 0\n`\n  },\n  {\n    route: \"/programs/inorder-traversal\",\n    name: \"Inorder Traversal\",\n    code: `\n\nclass TreeNode:\n    \"\"\"\n    pointers: left, right\n    \"\"\"\n    def __init__(self, data):\n        self.data = data\n        self.left = None\n        self.right = None\n\ndef traverseInOrder(outList, root):\n    if root.left is not None:\n        traverseInOrder(outList, root.left)\n    outList.append(root.data)\n    if root.right is not None:\n        traverseInOrder(outList, root.right)\n\ndef constructTree():\n    root = TreeNode(0)\n    root.left = TreeNode(11)\n    root.right = TreeNode(12)\n    root.left.left = TreeNode(21)\n    root.left.right = TreeNode(22)\n    return root\n\ndef main():\n    root = constructTree()\n    outList = []\n    traverseInOrder(outList, root)\n    return 0\n`\n  },\n  {\n    route: \"/programs/insertion-sort\",\n    name: \"Insertion Sort\",\n    code: `\ndef insertionSort(v):\n    \"\"\"\n    index: v[i]\n    index: v[j]\n    \"\"\"\n    i = 0\n    while i < len(v) - 1:\n        j = i + 1\n        while j >= 1:\n            if v[j] < v[j-1]:\n                v[j-1], v[j] = v[j], v[j-1]\n                j -= 1\n            else:\n                break\n        i += 1\n\ndef main():\n    v = [4, 3, 2, 1]\n    insertionSort(v)\n    return 0\n`\n  }\n]\n","import React from 'react';\nimport './App.css';\nimport { trace as DummyTrace } from './traces/sample'\nimport { ProgramStackUI } from './ui/stack/ProgramStackUI';\nimport { BsArrowLeft, BsArrowRight, BsArrowBarRight } from 'react-icons/bs'\nimport { VmEngine } from './vm/VirtualMachine';\nimport { Button, ButtonGroup, Navbar, NavbarBrand, Nav, NavLink, Container, Row, Col, Form, Spinner, Tooltip, OverlayTrigger, Popover, Alert, NavDropdown, FormControl } from 'react-bootstrap'\nimport Editor from \"@monaco-editor/react\";\nimport * as Monaco from 'monaco-editor/esm/vs/editor/editor.main';\nimport { ProgramHeapUI } from './ui/stack/ProgramHeapUI';\nimport superagent from 'superagent'\nimport { isNullOrUndefined } from 'util';\nimport { ProgramList } from './samples/Programs'\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\ninterface State {\n  lineNumber: number\n  highlightedPtr: number\n  isEditing: boolean\n  isWaiting: boolean\n  code: string\n  trace: any\n}\n\nconst AppContainer = () => {\n  return (\n    <Router forceRefresh>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">Gnutella</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavDropdown title=\"Sample Programs\" id=\"basic-nav-dropdown\">\n              {\n                ProgramList.map(p => {\n                  return <LinkContainer to={p.route}><NavDropdown.Item>{p.name}</NavDropdown.Item></LinkContainer>\n                })\n              }\n            </NavDropdown>\n            <Nav.Link href=\"#about\">About</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <div className=\"padded-container\">\n        <Container fluid >\n          <Switch>\n            {\n              ProgramList.map(p => {\n                return <Route path={p.route}>\n                  <App code={p.code} />\n                </Route>\n              })\n            }\n            <Route path=\"/\">\n              <App code={ProgramList[0].code} />\n            </Route>\n          </Switch>\n        </Container>\n      </div>\n    </Router>\n  )\n}\n\ninterface AppProps {\n  code: string\n}\n\nclass App extends React.Component<AppProps> {\n  vmEngine: VmEngine\n  state: State\n  monaco: any\n  decorations: any\n\n  constructor(props: AppProps) {\n    super(props)\n    this.vmEngine = new VmEngine(DummyTrace)\n    this.state = {\n      lineNumber: -1,\n      highlightedPtr: 0,\n      isEditing: true,\n      isWaiting: false,\n      code: props.code,\n      trace: DummyTrace\n    }\n    this.decorations = []\n  }\n\n  render() {\n    const onVmObjectClick = ptr => {\n      this.setState({ highlightedPtr: ptr })\n    }\n    const stack = <ProgramStackUI highlightedPtr={this.state.highlightedPtr} vmEngine={this.vmEngine} onVmObjectClick={onVmObjectClick} />\n\n    const heap = <ProgramHeapUI vmEngine={this.vmEngine} highlightedPtr={this.state.highlightedPtr} onVmObjectClick={onVmObjectClick} />\n\n    const incrementExecutionStep = (val: number) => {\n      if (val === 1) {\n        this.vmEngine.nextStep()\n      } else if (val === -1) {\n        this.vmEngine.prevStep()\n      } else if (val === 10) {\n        this.vmEngine.nextAndSkipFunction()\n      }\n      const line = this.vmEngine.executionLineNumber\n      let newDecorations = []\n      if (line > 0) {\n        this.monaco.revealLineInCenter(line);\n        newDecorations = [\n          {\n            range: new Monaco.Range(line, 1, line, 1),\n            options: {\n              isWholeLine: true,\n              className: 'highlightedLine',\n            }\n          }\n        ]\n      }\n      this.decorations = this.monaco.deltaDecorations(this.decorations, newDecorations)\n      this.setState({ lineNumber: this.vmEngine.executionLineNumber })\n    }\n\n    const handleEditorDidMount = (_, editor) => {\n      this.monaco = editor\n    }\n\n    const enterEditMode = () => {\n      this.decorations = this.monaco.deltaDecorations(this.decorations, [])\n      this.setState({ isEditing: true, isWaiting: false })\n    }\n\n    const enterRunMode = () => {\n      const code: string = this.monaco.getValue()\n      this.setState({ isEditing: false, isWaiting: true, code: code, trace: [] })\n      superagent\n        .post('/trace')\n        .send({ code: code })\n        .then(res => {\n          if (this.state.isWaiting === false) {\n            return\n          }\n          if (res.status !== 200) {\n            alert(res.status)\n          } else {\n            this.vmEngine = new VmEngine(res.body)\n            this.setState({ trace: res.body, isWaiting: false })\n          }\n        })\n    }\n\n    const getRunControls = () => {\n      if (this.state.isEditing === false && this.state.isWaiting == false) {\n        return <ButtonGroup>\n          <Button onClick={() => { incrementExecutionStep(-1) }}><BsArrowLeft />Previous</Button>\n          <Button onClick={() => { incrementExecutionStep(1) }}><BsArrowRight />Next</Button>\n          <Button onClick={() => { incrementExecutionStep(10) }} disabled={!this.vmEngine.isAboutToEnterFunction()} ><BsArrowBarRight /> Step Over Function</Button>\n        </ButtonGroup>\n      } else if (this.state.isWaiting === true) {\n        return <Spinner animation=\"border\" />\n      }\n      return <></>\n    }\n\n    const maybeError = !this.state.isEditing && !this.state.isWaiting && !isNullOrUndefined(this.state.trace.error) && (this.state.trace.error.type !== \"runtime\" || this.vmEngine.executionStepIndex >= this.vmEngine.programTrace.length) ? <Alert style={{ marginTop: \"15px\" }} key=\"error\" variant=\"danger\">\n      {this.state.trace.error.msg}\n    </Alert> : null\n\n    const editor = <>\n      <Editor\n        height=\"70vh\"\n        language=\"python\"\n        value={this.state.code}\n        theme={this.state.isEditing ? \"dark\" : \"light\"}\n        editorDidMount={handleEditorDidMount}\n        options={{ readOnly: !this.state.isEditing }}\n      />\n      <Form className=\"padded-container\">\n        <Form.Row className=\"align-items-center\">\n          <Col xs=\"auto\">{getRunControls()}</Col>\n          <Col xs=\"auto\">\n            {\n              this.state.isEditing ? <Button onClick={enterRunMode}>Run</Button> : <Button onClick={enterEditMode}>Edit</Button>\n            }\n          </Col>\n        </Form.Row>\n      </Form>\n      {maybeError}\n    </>\n\n    return (\n      <>\n        <Row>\n          <Col xs=\"5\">\n            {editor}\n          </Col>\n          <Col xs=\"2\">\n            {!this.state.isEditing && !this.state.isWaiting ? stack : <></>}\n          </Col>\n          <Col>\n            {!this.state.isEditing && !this.state.isWaiting ? heap : <></>}\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default AppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}