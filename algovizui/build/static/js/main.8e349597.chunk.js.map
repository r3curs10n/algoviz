{"version":3,"sources":["traces/sample.tsx","ui/stack/ProgramObjectUI.tsx","ui/stack/ProgramStackUI.tsx","vm/VirtualMachine.tsx","ui/stack/ProgramHeapGraphUI.tsx","ui/stack/ProgramHeapUI.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["trace","ProgramObjectUI","props","isNullOrUndefined","object","ptrValue","className","modifiedAtStep","executionStepIndex","name","toString","href","onClick","ProgramStackFrameUI","locals","frame","args","forEach","val","key","_","push","onVmObjectClick","vmEngine","maybeReturn","returnVal","methodName","ProgramStackUI","ListGroup","stack","frames","map","ListGroupItem","VmObject","boolValue","numberValue","stringValue","this","e","x","isPtr","fromPtr","undefined","fromString","fromNumber","fromBool","VmStackFrame","Map","has","get","VmStack","getTopFrame","pop","length","VmHeapObject","ptr","type","listObject","mapObject","VmHeap","storage","namedReferences","Set","arg","add","local","VmEngine","heap","programTrace","programInfer","executionLineNumber","log","infer","nextStepInternal","op","info","Object","entries","wrappedArgs","set","fromVal","function","pushFrame","line","obj","popFrame","id","Array","isArray","z","members","pos","curList","curMap","delete","executeStep","updateNamedReferences","stepToGo","reset","i","nextStep","filter","data","inferences","localVarValue","localVarName","genericInference","inference","funcName","var","getVariable","array","indexVarName","indexVarValue","indexDimension","index","visjs","require","ProgramHeapGraphUI","visjsDomRef","graph","options","React","createRef","layout","hierarchical","direction","sortMethod","Network","current","console","nodes","highlightedPtr","update","color","background","ref","annotations","dataMemebrs","find","member","join","edges","consumed","getMemberPointerAnnotationsFor","label","getLabelFor","annotation","from","to","arrows","DataSet","ui","Component","OneDArray","_vmEngine","every","getArrayIndexAnnotationsFor","arr","Table","bordered","size","idx","indices","TwoDArray","child","is","cols","Math","max","list","rowUi","Dict","rows","ProgramHeapUI","elements","addUI","r","getUI","v","Card","border","Body","graphUI","createUI","App","state","monaco","decorations","DummyTrace","lineNumber","isEditing","isWaiting","code","setState","incrementExecutionStep","prevStep","newDecorations","revealLineInCenter","range","Monaco","isWholeLine","deltaDecorations","editor","height","language","value","theme","editorDidMount","readOnly","Form","Row","Col","xs","ButtonGroup","Button","Spinner","animation","getValue","superagent","post","send","then","res","status","alert","body","Navbar","bg","variant","Brand","Nav","navbar","NavLink","Container","fluid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8e349597.chunk.js","sourcesContent":["export const trace = {\n  \"infer\": [],\n  \"log\": []\n}\n","import { isNullOrUndefined } from \"util\"\nimport { VmObject } from \"../../vm/VirtualMachine\"\nimport React from 'react'\n\ninterface ProgramObjectUIProps {\n  name?: string\n  object: VmObject\n  executionStepIndex: number\n  onClick?: (ptr: number) => void\n}\n\nexport const ProgramObjectUI = (props: ProgramObjectUIProps) => {\n  if (isNullOrUndefined(props.object.ptrValue)) {\n    return <div className={props.object.modifiedAtStep === props.executionStepIndex ? \"highlightedLine\" : \"\"}>\n      {(isNullOrUndefined(props.name) ? '' : (props.name + ': ')) + props.object.toString()}\n    </div>\n  } else {\n    return <div className={props.object.modifiedAtStep === props.executionStepIndex ? \"highlightedLine\" : \"\"}>\n      {isNullOrUndefined(props.name) ? '' : (props.name + ': ')}\n      <a href=\"#\" onClick={() => {\n        if (props.onClick !== null) {\n          props.onClick(props.object.ptrValue)\n        }\n      }}>\n        show\n        </a>\n    </div>\n  }\n}\n","import { VmEngine, VmStackFrame, VmObject } from '../../vm/VirtualMachine'\nimport { ListGroup, ListGroupItem } from 'react-bootstrap'\nimport React from 'react'\nimport { ProgramObjectUI } from './ProgramObjectUI'\nimport { isNullOrUndefined } from 'util'\n\nexport interface ProgramStackUIProps {\n  vmEngine: VmEngine,\n  onVmObjectClick?: (ptr: number) => void\n}\n\ninterface ProgramStackFrameUIProps {\n  vmEngine: VmEngine,\n  frame: VmStackFrame,\n  onVmObjectClick?: (ptr: number) => void\n}\n\nconst ProgramStackFrameUI = (props: ProgramStackFrameUIProps) => {\n  const locals = []\n  props.frame.args.forEach((val, key, _) => {\n    locals.push(<ProgramObjectUI name={key} object={val} onClick={props.onVmObjectClick} executionStepIndex={props.vmEngine.executionStepIndex} />)\n  })\n  props.frame.locals.forEach((val, key, _) => {\n    locals.push(<ProgramObjectUI name={key} object={val} onClick={props.onVmObjectClick} executionStepIndex={props.vmEngine.executionStepIndex} />)\n  })\n\n  let maybeReturn = null\n  if (!isNullOrUndefined(props.frame.returnVal)) {\n    maybeReturn = <div>\n      <ProgramObjectUI name=\"Return\" object={props.frame.returnVal} onClick={props.onVmObjectClick} executionStepIndex={props.vmEngine.executionStepIndex} />)\n    </div>\n  }\n\n  return <div>\n    <div>\n    {props.frame.methodName + '()'}\n    </div>\n    <div>\n      {locals}\n    </div>\n    { maybeReturn}\n  </div>\n}\n\nexport const ProgramStackUI = (props: ProgramStackUIProps) => {\n  return <ListGroup>\n    {props.vmEngine.stack.frames.map(frame => {\n      return <ListGroupItem>\n        <ProgramStackFrameUI frame={frame} onVmObjectClick={props.onVmObjectClick} vmEngine={props.vmEngine} />\n      </ListGroupItem>\n    })}\n  </ListGroup>\n}\n","import { isNullOrUndefined } from \"util\"\n\nexport class VmObject {\n  boolValue?: boolean\n  numberValue?: number\n  ptrValue?: number\n  stringValue?: string\n\n  modifiedAtStep?: number\n\n  toString() {\n    if (!isNullOrUndefined(this.boolValue)) {\n      return '' + this.boolValue\n    } else if (!isNullOrUndefined(this.numberValue)) {\n      return '' + this.numberValue\n    } else if (!isNullOrUndefined(this.ptrValue)) {\n      return '#' + this.ptrValue\n    } else if (!isNullOrUndefined(this.stringValue)) {\n      return '\"' + this.stringValue + '\"'\n    }\n    return 'null'\n  }\n\n  static fromBool(val: boolean) {\n    let e = new VmObject()\n    e.boolValue = val\n    return e\n  }\n\n  static fromNumber(val: number) {\n    let e = new VmObject()\n    e.numberValue = val\n    return e\n  }\n\n  static fromPtr(val: number) {\n    let e = new VmObject()\n    e.ptrValue = val\n    return e\n  }\n\n  static fromString(val: string) {\n    let e = new VmObject()\n    e.stringValue = val\n    return e\n  }\n\n  static fromVal(x: Array<any>) {\n    const isPtr = x[0]\n    const val = x[1]\n\n    if (isPtr) {\n      return VmObject.fromPtr(val)\n    }\n\n    if (val == null || val == undefined) {\n      return new VmObject()\n    } else if (typeof val == \"string\") {\n      return VmObject.fromString(val)\n    } else if (typeof val == \"number\") {\n      return VmObject.fromNumber(val)\n    } else if (typeof val == \"boolean\") {\n      return VmObject.fromBool(val)\n    }\n\n    return new VmObject()\n  }\n}\n\nexport class VmStackFrame {\n  methodName: string\n  args: Map<string, VmObject> = new Map()\n  locals: Map<string, VmObject> = new Map()\n  returnVal?: VmObject\n\n  constructor(methodName: string, args: Map<string, VmObject>) {\n    this.methodName = methodName\n    this.args = args\n  }\n\n  getVariable(name: string): VmObject {\n    if (this.locals.has(name)) {\n      return this.locals.get(name)\n    }\n    if (this.args.has(name)) {\n      return this.args.get(name)\n    }\n    return null\n  }\n}\n\nexport class VmStack {\n  frames: Array<VmStackFrame> = []\n\n  pushFrame(frame: VmStackFrame) {\n    this.frames.push(frame)\n  }\n\n  markFrameReturn(val: VmObject) {\n    this.getTopFrame().returnVal = val\n  }\n\n  popFrame() {\n    this.frames.pop()\n  }\n\n  getTopFrame() {\n    return this.frames[this.frames.length  - 1]\n  }\n}\n\ninterface ExecutionStep {\n  op: string,\n  info: any,\n}\n\ninterface ArrayIndexInference {\n  funcName: string,\n  array: string,\n  var: string,\n  index: number\n}\n\nexport interface MemberPointerInference {\n  className: string,\n  member: string\n}\n\ninterface Inference {\n  type: string,\n  data: any\n}\n\ninterface ArrayIndexAnnotation {\n  indexVarName: string,\n  indexVarValue: number,\n  indexDimension: number\n}\n\nexport class VmHeapObject {\n  type: string\n  ptr: number\n  listObject?: Array<VmObject>\n  mapObject?: Map<string, VmObject>\n\n  constructor(ptr: number, type){\n    this.type = type\n    this.ptr = ptr\n  }\n}\n\nexport class VmHeap {\n  storage: Map<number, VmHeapObject>\n  namedReferences: Set<number>\n\n  constructor() {\n    this.storage = new Map()\n    this.namedReferences = new Set()\n  }\n\n  updateNamedReferences(stack: VmStack) {\n    this.namedReferences = new Set()\n    stack.frames.forEach((frame) => {\n      frame.args.forEach((arg) => {\n        if (arg.ptrValue !== null) {\n          this.namedReferences.add(arg.ptrValue)\n        }\n      })\n      frame.locals.forEach((local) => {\n        if (local.ptrValue !== null) {\n          this.namedReferences.add(local.ptrValue)\n        }\n      })\n    })\n  }\n}\n\nexport class VmEngine {\n  stack: VmStack\n  heap: VmHeap\n  programTrace: Array<ExecutionStep>\n  programInfer: Array<Inference>\n  executionStepIndex: number = -1\n  executionLineNumber: number = -1\n\n  constructor(trace) {\n    this.programTrace = trace.log\n    this.programInfer = trace.infer\n    this.stack = new VmStack()\n    this.heap = new VmHeap()\n  }\n\n  nextStep() {\n    this.nextStepInternal()\n    // let curLine = this.executionLineNumber\n    // while (this.executionLineNumber == curLine) {\n    //   if (!this.nextStepInternal()) {\n    //     break\n    //   }\n    // }\n  }\n\n  executeStep(e: any) {\n    if (e.op == \"line\") {\n      this.executionLineNumber = e.info\n    } else if (e.op == \"pushFrame\") {\n      const args: Map<string, any> = new Map(Object.entries(e.info.locals))\n      const wrappedArgs: Map<string, VmObject> = new Map()\n      args.forEach((val: any, key: string, _) => {\n        wrappedArgs.set(key, VmObject.fromVal(val))\n      })\n      const frame = new VmStackFrame(e.info.function, wrappedArgs)\n      this.stack.pushFrame(frame)\n      this.executionLineNumber = e.info.line\n    } else if (e.op == \"newLocal\" || e.op == \"updateLocal\") {\n      const obj = VmObject.fromVal(e.info[1])\n      obj.modifiedAtStep = this.executionStepIndex\n      this.stack.getTopFrame().locals.set(e.info[0], obj)\n    } else if (e.op == \"return\") {\n      this.executionLineNumber = -1\n      this.stack.getTopFrame().returnVal = VmObject.fromVal(e.info)\n      this.stack.getTopFrame().returnVal.modifiedAtStep = this.executionStepIndex\n    } else if (e.op == \"popFrame\") {\n      this.executionLineNumber = -1\n      this.stack.popFrame()\n    } else if (e.op == \"new\") {\n      const id: number = e.info[0]\n      let obj = new VmHeapObject(id, \"\")\n      if (Array.isArray(e.info[1])) {\n        const val: Array<any> = e.info[1]\n        obj.listObject = val.map((z => VmObject.fromVal(z)))\n        obj.type = \"list\"\n      } else {\n        obj.type = e.info[1].type\n        obj.mapObject = new Map()\n        Object.entries(e.info[1].members).forEach(([key, val]) => {\n          obj.mapObject.set(key, VmObject.fromVal(val as Array<any>))\n        })\n      }\n      this.heap.storage.set(id, obj)\n    } else if (e.op == \"modifyPos\") {\n      const id: number = e.info[0]\n      const pos: number = e.info[1]\n      const val: any = e.info[2]\n      const curList = this.heap.storage.get(id)\n      const obj = VmObject.fromVal(val)\n      obj.modifiedAtStep = this.executionStepIndex\n      if (pos >= curList.listObject.length) {\n        curList.listObject.push(obj)\n      } else {\n        curList.listObject[pos] = obj\n      }\n    } else if (e.op == \"modifyKey\" || e.op == \"addKey\") {\n      const id: number = e.info[0]\n      const key = e.info[1]\n      const val = e.info[2]\n      const curMap = this.heap.storage.get(id)\n      const obj = VmObject.fromVal(val)\n      obj.modifiedAtStep = this.executionStepIndex\n      curMap.mapObject.set(key, obj)\n    } else if (e.op == \"delete\") {\n      this.heap.storage.delete(e.info)\n    } else if (e.op == \"batch\") {\n      e.info.forEach(z => this.executeStep(z))\n    }\n  }\n\n  nextStepInternal() {\n    this.executionStepIndex++\n    if (this.executionStepIndex >= this.programTrace.length) {\n      return false\n    }\n\n    const e = this.programTrace[this.executionStepIndex]\n    this.executeStep(e)\n\n    this.heap.updateNamedReferences(this.stack)\n    return true\n  }\n\n  prevStep() {\n    const stepToGo = this.executionStepIndex - 1\n    this.reset()\n    for (let i = 0; i < stepToGo; i++) {\n      this.nextStep()\n    }\n  }\n\n  reset() {\n    this.executionLineNumber = -1\n    this.executionStepIndex = -1\n    this.stack = new VmStack()\n  }\n\n  getMemberPointerAnnotationsFor(ptr: number) {\n    const obj = this.heap.storage.get(ptr)\n    return this.programInfer.filter(\n      e => e.type === \"memberPointer\" && e.data.className === obj.type\n    ).map(\n      e => e.data as MemberPointerInference\n    )\n  }\n\n  getArrayIndexAnnotationsFor(ptr: number) {\n    const frame = this.stack.getTopFrame()\n    const inferences: Array<ArrayIndexAnnotation> = []\n    frame.locals.forEach((localVarValue, localVarName) => {\n      this.programInfer.forEach(genericInference => {\n        if (genericInference.type !== \"arrayIndex\") {\n          return\n        }\n        const inference: ArrayIndexInference = genericInference.data\n        if (inference.funcName !== frame.methodName) {\n          return\n        }\n        if (inference.var !== localVarName) {\n          return\n        }\n        if (frame.getVariable(inference.array).ptrValue !== ptr) {\n          return\n        }\n        inferences.push({\n          indexVarName: localVarName,\n          indexVarValue: localVarValue.numberValue,\n          indexDimension: inference.index\n        })\n      })\n    })\n    return inferences\n  }\n}\n","import { VmHeap, VmObject, VmHeapObject, VmEngine, MemberPointerInference } from '../../vm/VirtualMachine'\nimport { ListGroup, ListGroupItem, Table, Card } from 'react-bootstrap'\nimport React from 'react'\nimport 'visjs-network/dist/vis.css'\nimport './heap-graph.css'\nimport { isNullOrUndefined } from 'util'\nconst visjs = require('visjs-network/dist/vis')\n\ninterface ProgramHeapGraphUIProps {\n  vmEngine: VmEngine\n  data: any\n  highlightedPtr: number\n}\n\nexport class ProgramHeapGraphUI extends React.Component<ProgramHeapGraphUIProps> {\n  visjsDomRef: React.RefObject<any>\n  graph: any\n  options: any\n\n  constructor(props: ProgramHeapGraphUIProps) {\n    super(props)\n    this.visjsDomRef = React.createRef()\n    this.options = {\n      layout: {\n        hierarchical: {\n          direction: \"UD\",\n          sortMethod: \"directed\"\n        },\n      },\n    }\n  }\n\n  static getLabelFor(obj: VmHeapObject, annotations: Array<MemberPointerInference>) {\n    let dataMemebrs = []\n    obj.mapObject.forEach((val, key) => {\n      if (!annotations.find(e => e.member === key)) {\n        dataMemebrs.push(`${key}: ${val.toString()}`)\n      }\n    })\n    return dataMemebrs.length > 0 ? dataMemebrs.join(\"\\n\") : \"...\"\n  }\n\n  static createUI(vmEngine: VmEngine, highlightedPtr: number) {\n    const heap = vmEngine.heap\n    const nodes = []\n    const edges = []\n    const consumed = new Set()\n    heap.storage.forEach((obj, ptr) => {\n      const annotations = vmEngine.getMemberPointerAnnotationsFor(ptr)\n      console.log('annotations')\n      console.log(annotations)\n      if (annotations.length > 0) {\n        consumed.add(ptr)\n        nodes.push({id: ptr, label: ProgramHeapGraphUI.getLabelFor(obj, annotations)})\n        annotations.forEach(annotation => {\n          if (obj.mapObject.has(annotation.member) && obj.mapObject.get(annotation.member).ptrValue !== 0)\n          edges.push({from: ptr, to: obj.mapObject.get(annotation.member).ptrValue, arrows: \"to\"})\n        })\n      }\n    })\n    const data = {\n      nodes: new visjs.DataSet(nodes),\n      edges: new visjs.DataSet(edges),\n    }\n    console.log('fdata')\n    console.log(data)\n    return {\n      consumed: consumed,\n      ui: <ProgramHeapGraphUI data={data} vmEngine={vmEngine} highlightedPtr={highlightedPtr} />\n    }\n  }\n\n  componentDidMount() {\n    this.graph = new visjs.Network(this.visjsDomRef.current, this.props.data, this.options);\n  }\n\n  render() {\n    if (!isNullOrUndefined(this.visjsDomRef.current)) {\n      console.log('render')\n      console.log(this.props.data)\n      this.graph = new visjs.Network(this.visjsDomRef.current, this.props.data, this.options);\n      if (!isNullOrUndefined(this.props.data.nodes.get(this.props.highlightedPtr))) {\n        this.props.data.nodes.update([{id: this.props.highlightedPtr, color: {background: \"#AAFFAA\"}}])\n      }\n    }\n    return <div className=\"heap-graph\" ref={this.visjsDomRef}></div>\n  }\n}\n","import { VmHeap, VmObject, VmHeapObject, VmEngine } from '../../vm/VirtualMachine'\nimport { ListGroup, ListGroupItem, Table, Card } from 'react-bootstrap'\nimport React from 'react'\nimport { isNullOrUndefined } from 'util'\nimport { ProgramObjectUI } from './ProgramObjectUI'\nimport { ProgramHeapGraphUI } from './ProgramHeapGraphUI'\n\nclass OneDArray {\n  static is(obj: VmHeapObject, _vmEngine: VmEngine) {\n    if (isNullOrUndefined(obj.listObject)) {\n      return false\n    }\n    return obj.listObject.every(e => isNullOrUndefined(e.ptrValue))\n  }\n\n  static getUI(obj: VmHeapObject, vmEngine: VmEngine) {\n    const annotations = vmEngine.getArrayIndexAnnotationsFor(obj.ptr)\n    const arr = obj.listObject\n    const ui = <Table bordered size=\"sm\">\n      <thead>\n        <tr>\n          {arr.map((_, idx) => {\n            const indices = annotations.filter(e => e.indexVarValue === idx && e.indexDimension === 0).map(e => e.indexVarName)\n            const annotation = indices.length > 0 ? '(' + indices.join(\", \") + ')' : \"\"\n            return <th className=\"w-25\">{`${idx} ${annotation}`}</th>\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {arr.map((e) => {\n            return <td>\n              {\n                <ProgramObjectUI object={e} executionStepIndex={vmEngine.executionStepIndex} />\n              }\n            </td>\n          })}\n        </tr>\n      </tbody>\n    </Table>\n\n    return {\n      consumed: new Set(),\n      ui: ui\n    }\n  }\n}\n\nclass TwoDArray {\n  static is(obj: VmHeapObject, vmEngine: VmEngine) {\n    if (isNullOrUndefined(obj.listObject)) {\n      return false\n    }\n    return obj.listObject.every(child => {\n      if (isNullOrUndefined(child.ptrValue) || !vmEngine.heap.storage.has(child.ptrValue)) {\n        return false\n      }\n      return OneDArray.is(vmEngine.heap.storage.get(child.ptrValue), vmEngine)\n    })\n  }\n\n  static getUI(obj: VmHeapObject, vmEngine: VmEngine) {\n    const arr = obj.listObject\n    const cols = Math.max(...arr.map(e => vmEngine.heap.storage.get(e.ptrValue).listObject.length))\n\n    const annotations = vmEngine.getArrayIndexAnnotationsFor(obj.ptr)\n\n    const rowUi = (idx: number, list: VmHeapObject) => {\n      return <tr>\n        <th>\n          {\n            (() => {\n              const indices = annotations.filter(e => e.indexVarValue === idx && e.indexDimension === 0).map(e => e.indexVarName)\n              const annotation = indices.length > 0 ? '(' + indices.join(\", \") + ')' : \"\"\n              return `${idx} ${annotation}`\n            }\n            )()}\n        </th>\n        {list.listObject.map(e => {\n          return <td>\n            <ProgramObjectUI object={e} executionStepIndex={vmEngine.executionStepIndex} />\n          </td>\n        })}\n      </tr>\n    }\n\n    const ui = <Table bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th className=\"w-25\">#</th>\n          {Array.from({ length: cols }).map((_, idx) => {\n            const indices = annotations.filter(e => e.indexVarValue === idx && e.indexDimension === 1).map(e => e.indexVarName)\n            const annotation = indices.length > 0 ? '(' + indices.join(\", \") + ')' : \"\"\n            return <th className=\"w-25\">{`${idx} ${annotation}`}</th>\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {\n          arr.map((e, idx) => rowUi(idx, vmEngine.heap.storage.get(e.ptrValue)))\n        }\n      </tbody>\n    </Table>\n\n    const consumed = new Set()\n    arr.forEach(e => consumed.add(e.ptrValue))\n\n    return {\n      consumed: consumed,\n      ui: ui\n    }\n  }\n}\n\nclass Dict {\n  static is(obj: VmHeapObject, _vmEngine: VmEngine) {\n    if (isNullOrUndefined(obj.mapObject) || obj.type !== \"dict\") {\n      return false\n    }\n    return true\n  }\n\n  static getUI(obj: VmHeapObject, vmEngine: VmEngine, onVmObjectClick) {\n    const members = obj.mapObject\n    const ui = <Table bordered size=\"sm\">\n      <thead>\n        <tr>\n          <th>Key</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {(() => {\n          let rows = []\n          members.forEach((val, key) => {\n            rows.push(<tr>\n              <td>{key}</td>\n              <td><ProgramObjectUI object={val} executionStepIndex={vmEngine.executionStepIndex} onClick={onVmObjectClick} /></td>\n            </tr>)\n          })\n          return rows\n        })()}\n      </tbody>\n    </Table>\n\n    return {\n      consumed: new Set(),\n      ui: ui\n    }\n  }\n}\n\ninterface ProgramHeapUIProps {\n  vmEngine: VmEngine,\n  highlightedPtr: number,\n  onVmObjectClick: (ptr: number) => void\n}\n\nconst createUIFor = (obj: VmHeapObject, vmEngine: VmEngine, onVmObjectClick) => {\n  if (OneDArray.is(obj, vmEngine)) {\n    return OneDArray.getUI(obj, vmEngine)\n  }\n  if (TwoDArray.is(obj, vmEngine)) {\n    return TwoDArray.getUI(obj, vmEngine)\n  }\n  if (Dict.is(obj, vmEngine)) {\n    return Dict.getUI(obj, vmEngine, onVmObjectClick)\n  }\n  return {\n    consumed: new Set(),\n    ui: <div>Not Supported</div>\n  }\n}\n\nexport const ProgramHeapUI = (props: ProgramHeapUIProps) => {\n  const heap = props.vmEngine.heap\n\n  const consumed = new Set()\n  const elements = []\n\n  const addUI = (ptr: number, e: VmHeapObject) => {\n    const r = createUIFor(e, props.vmEngine, props.onVmObjectClick)\n    r.consumed.forEach(v => consumed.add(v))\n    elements.push(\n      <Card border={props.highlightedPtr === ptr ? \"primary\" : null}>\n        <Card.Body>\n          {r.ui}\n        </Card.Body>\n      </Card>\n    )\n  }\n\n  const graphUI = ProgramHeapGraphUI.createUI(props.vmEngine, props.highlightedPtr)\n  graphUI.consumed.forEach(v => consumed.add(v))\n  if (graphUI.consumed.size > 0) {\n    elements.push(\n      <Card>\n        <Card.Body>\n          {graphUI.ui}\n        </Card.Body>\n      </Card>\n    )\n  }\n\n  heap.namedReferences.forEach(ptr => {\n    if (!heap.storage.has(ptr) || consumed.has(ptr)) {\n      return;\n    }\n    consumed.add(ptr)\n    addUI(ptr, heap.storage.get(ptr))\n  })\n\n  // Add UI for unnamed refs if they haven't been consumed\n  heap.storage.forEach((obj, ptr) => {\n    if (!consumed.has(ptr)) {\n      addUI(ptr, obj)\n    }\n  })\n\n  return <div>\n    {elements}\n  </div>\n}\n","import React from 'react';\nimport './App.css';\nimport { trace as DummyTrace } from './traces/sample'\nimport { ProgramStackUI } from './ui/stack/ProgramStackUI';\nimport { BsArrowLeft, BsArrowRight } from 'react-icons/bs'\nimport { VmEngine } from './vm/VirtualMachine';\nimport { Button, ButtonGroup, Navbar, NavbarBrand, Nav, NavLink, Container, Row, Col, Form, Spinner } from 'react-bootstrap'\nimport Editor from \"@monaco-editor/react\";\nimport * as Monaco from 'monaco-editor/esm/vs/editor/editor.main';\nimport { ProgramHeapUI } from './ui/stack/ProgramHeapUI';\nimport superagent from 'superagent'\nimport { ProgramHeapGraphUI } from './ui/stack/ProgramHeapGraphUI';\n\n\nconst dummyCode: string = `\ndef fillMatrix(m):\n    \"\"\"\n    index: m[i][j]\n    \"\"\"\n    for i in range(len(m)):\n        for j in range(len(m[0])):\n            m[i][j] = i+j\n\ndef fibonacci(n):\n    if n == 0 or n == 1:\n        return 1\n    ans = 0\n    ans += fibonacci(n-1)\n    ans += fibonacci(n-2)\n    return ans\n\nclass TreeNode:\n    \"\"\"\n    pointers: left, right\n    \"\"\"\n    def __init__(self):\n        self.data = 0\n        self.left = None\n        self.right = None\n\ndef constructTree():\n    a = TreeNode()\n    b = TreeNode()\n    c = TreeNode()\n    a.data = 1\n    b.data = 2\n    c.data = 3\n    a.left = b\n    a.right = c\n    a.data += 1\n\ndef main():\n    constructTree()\n    testMap = {1: 100, 2: 200}\n    m = [[0,0,0], [0,0,0], [0,0,0]]\n    fillMatrix(m)\n    # fibonacci(4)\n\n`;\n\ninterface State {\n  lineNumber: number\n  highlightedPtr: number\n  isEditing: boolean\n  isWaiting: boolean\n  code: string\n  trace: any\n}\n\nclass App extends React.Component {\n  vmEngine: VmEngine\n  state: State\n  monaco: any\n  decorations: any\n\n  constructor(props) {\n    super(props)\n    this.vmEngine = new VmEngine(DummyTrace)\n    this.state = {\n      lineNumber: -1,\n      highlightedPtr: 0,\n      isEditing: true,\n      isWaiting: false,\n      code: dummyCode,\n      trace: DummyTrace\n    }\n    this.decorations = []\n  }\n\n  render() {\n    const onVmObjectClick = ptr => {\n      this.setState({ highlightedPtr: ptr})\n    }\n    const stack = <ProgramStackUI vmEngine={this.vmEngine} onVmObjectClick={onVmObjectClick} />\n\n    const heap = <ProgramHeapUI vmEngine={this.vmEngine} highlightedPtr={this.state.highlightedPtr} onVmObjectClick={onVmObjectClick} />\n\n    const incrementExecutionStep = (val: number) => {\n      if (val > 0) {\n        this.vmEngine.nextStep()\n      } else {\n        this.vmEngine.prevStep()\n      }\n      const line = this.vmEngine.executionLineNumber\n      let newDecorations = []\n      if (line > 0) {\n        this.monaco.revealLineInCenter(line);\n        newDecorations = [\n          {\n            range: new Monaco.Range(line, 1, line, 1),\n            options: {\n              isWholeLine: true,\n              className: 'highlightedLine',\n            }\n          }\n        ]\n      }\n      this.decorations = this.monaco.deltaDecorations(this.decorations, newDecorations)\n      this.setState({ lineNumber: this.vmEngine.executionLineNumber })\n    }\n\n    const handleEditorDidMount = (_, editor) => {\n      this.monaco = editor\n    }\n\n    const enterEditMode = () => {\n      this.decorations = this.monaco.deltaDecorations(this.decorations, [])\n      this.setState({ isEditing: true, isWaiting: false })\n    }\n\n    const enterRunMode = () => {\n      const code: string = this.monaco.getValue()\n      this.setState({ isEditing: false, isWaiting: true, code: code, trace: [] })\n      superagent\n        .post('/trace')\n        .send({ code: code })\n        .then(res => {\n          if (this.state.isWaiting === false) {\n            return\n          }\n          if (res.status !== 200) {\n            alert(res.status)\n          } else {\n            this.vmEngine = new VmEngine(res.body)\n            this.setState({ trace: res.body, isWaiting: false })\n          }\n        })\n    }\n\n    const getRunControls = () => {\n      if (this.state.isEditing === false && this.state.isWaiting == false) {\n        return <ButtonGroup>\n          <Button onClick={() => { incrementExecutionStep(-1) }}><BsArrowLeft /></Button>\n          <Button onClick={() => { incrementExecutionStep(1) }}><BsArrowRight /></Button>\n        </ButtonGroup>\n      } else if (this.state.isWaiting === true) {\n        return <Spinner animation=\"border\" />\n      }\n      return <></>\n    }\n\n    const editor = <>\n      <Editor\n        height=\"80vh\"\n        language=\"python\"\n        value={this.state.code}\n        theme={this.state.isEditing ? \"dark\" : \"light\"}\n        editorDidMount={handleEditorDidMount}\n        options={{ readOnly: !this.state.isEditing }}\n      />\n      <Form className=\"padded-container\">\n        <Form.Row className=\"align-items-center\">\n          <Col xs=\"auto\">{getRunControls()}</Col>\n          <Col xs=\"auto\">\n            {\n              this.state.isEditing ? <Button onClick={enterRunMode}>Run</Button> : <Button onClick={enterEditMode}>Edit</Button>\n            }\n          </Col>\n        </Form.Row>\n      </Form>\n    </>\n\n    return (\n      <>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"/\">Aphrodite</Navbar.Brand>\n          <Nav className=\"mr-auto\" navbar></Nav>\n          <NavLink href=\"#\">About</NavLink>\n        </Navbar>\n        <div className=\"padded-container\">\n          <Container fluid={true}>\n            <Row>\n              <Col xs=\"5\">\n                {editor}\n              </Col>\n              <Col xs=\"3\">\n                {!this.state.isEditing && !this.state.isWaiting ? stack : <></>}\n              </Col>\n              <Col>\n                {!this.state.isEditing && !this.state.isWaiting || true ? heap : <></>}\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}